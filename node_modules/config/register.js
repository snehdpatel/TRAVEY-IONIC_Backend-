var crypto = require('crypto');
var rand = require('csprng');
var sql = require("mssql");
var distance = 10000 / 6371;
var aavara = "something_xyz"
 
var config = {
    server: '192.168.74.1', // You can use 'localhost\\instance' to connect to named instance 
    database: 'TRAVEY',
    user: 'test2',
    password: 'test',
    port: 1433
};


exports.register = function (user_name, phone_number, email, password, callback) {
    
    var temp = rand(160, 36);
    var newpass = temp + password;
    var token = crypto.createHash('sha512').update(aavara + rand).digest("hex");
    var hashed_password = crypto.createHash('sha512').update(newpass).digest("hex");
    
    var conn = new sql.Connection(config);
    var q = "insert into tbl_User(phone_number,[user_name], email_id, shared_location, allowed_to_post, token, salt, hashed_password, upvotes, downvotes) values(" + phone_number + ", '" + user_name + "', '" + email + "', 1, 1, '" + token + "', '" + temp + "', '" + hashed_password + "', 0, 0);";
    
    console.log("in the function ");

    conn.connect().then(function () {
        console.log("connection done ");
        var req = new sql.Request(conn);
        req.query(q).then(function (recordset) {
            callback({'response': true ,'res':"yes"});
            console.log("successful");
            conn.close();
        })
		.catch(function (Error) {
            if(Error.message === "Violation of PRIMARY KEY constraint \'PK_User\'. Cannot insert duplicate key in object \'dbo.tbl_User\'.")
                callback({'response': false ,'res':"Phone number Exists !"});
            else
                callback(Error);
            conn.close();
        });
    })
	.catch(function (Error) {
        callback(Error);
        console.log(Error);
    })
    
    //var newuser = new models.User({
    //    token: token,
    //    user_name: user_name,
    //    phone_number: phone_number,
    //    email: email, 
    //    gcm_id : gcm_id,
    //    shared_location : "1",
    //    allowed_to_post : "1",
    //    upvotes : 0,
    //    downvotes : 0,
    //    //history: JSON.parse(history),
    //    //location : [lat, long],
    //    hashed_password: hashed_password,
    //    salt : temp
    //});
    
    //newuser.save(function (err) {
    //    console.log("here we go");
    //    callback({ 'response' : "Succesfully registered !" });
    //});

			/*models.User.find({phone_number: phone_number},function(err,users){

				var len = users.length;

				if(len == 0){
				 	
				 	callback({'response':"yes"});
				}else{

					callback({'response':"no"});
				}
			});

		}else{

				callback({'response':"Password Weak"});
		
			}
		}else{

			callback({'response':"Email Not Valid"});
		
		}*/
}

